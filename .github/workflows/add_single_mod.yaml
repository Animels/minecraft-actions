name: Add single mod and all dependencies

on:
  workflow_dispatch:
    inputs:
      modid_projectid:
        description: 'Write projetcId of mod'
        required: true
        default: '74072' # mod with deps
        # default: '876781' Just mod
        type: string
      fileid: 
        description: 'Write modId of mod'
        required: true
        default: '5358052' # mod with deps
        # default: '5397482' Just mod
        type: string
env:
  BASE_URL: https://api.curseforge.com
  MAX_PAGE_SIZE: 50
  API_KEY: \$2a\$10\$4UughKvVMNC9Yl0cUfhAsOiOkCWgy/k/6rn.z5bIztd62LpZ1eibe

jobs:
  download_and_install_mods:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_DO_DROPLET }}

      - name: Create environment file
        run: |
          INPUT_MOD_ID=${{ github.event.inputs.modid_projectid }}
          INPUT_FILE_ID=${{ github.event.inputs.fileid }}
          echo "BASE_URL=$BASE_URL" > .env
          echo "API_KEY=$API_KEY" >> .env
          echo "INPUT_MOD_ID=$INPUT_MOD_ID" >> .env
          echo "INPUT_FILE_ID=$INPUT_FILE_ID" >> .env
          cat .env  # Debug to ensure the file is correct

      - name: Copy .env file to Droplet
        run: |
          scp -o StrictHostKeyChecking=no .env root@206.189.84.101:/root/tempMC/

      - name: Copy files from push to droplet and start from the new version
        run: |
         ssh -o StrictHostKeyChecking=no root@206.189.84.101 <<'EOF'
          source /root/tempMC/.env
          echo "Running commands on the Droplet"
          echo "Base URL: $BASE_URL"
          echo "API_KEY: $API_KEY"
          echo "MAX_PAGE_SIZE: $MAX_PAGE_SIZE"
          echo "INPUT_MOD_ID: $INPUT_MOD_ID"
          cd /root/tempMC
            
          api_url_dlink="$BASE_URL/v1/mods/$INPUT_MOD_ID/files/$INPUT_FILE_ID/download-url"
          api_url_info="$BASE_URL/v1/mods/$INPUT_MOD_ID/files/$INPUT_FILE_ID"
      
          echo "API URL: $api_url"

          response=$(curl -vvv "$api_url_dlink" -H "x-api-key: $API_KEY")
          echo "Extracted response: $response"

          response_body=$(echo "$response" | sed '/HTTP_STATUS:/d')
          echo "Response Body: $response_body"  # Debugging: Print the response body

          downloadUrl=$(echo "$response_body" | jq -r '.data')
          echo "Extracted URL: $downloadUrl"
            

          if [[ $downloadUrl =~ ^https?:// ]]; then
            echo "Valid URL: $downloadUrl"
            curl -o /root/temp/temp.zip -L "$downloadUrl"
           else
            echo "Invalid URL extracted: $downloadUrl"
            exit 1
          fi

         

          echo "Install deps if needed" 
          curl -vvv -L "$api_url_info" -H "x-api-key: $API_KEY" -o /root/temp/response.json

          if [[ -s /root/temp/response.json ]]; then
            echo "Successfully downloaded response.json"
            has_dependencies=$(jq -r '.data.dependencies | length > 0' /root/temp/response.json)
            echo "Has Deps? $has_dependencies"
            
            if [ -n "$has_dependencies" ]; then
              forgeGameVersion="Forge"
              dep_lvl=3
              gameVersions=$(jq -r '.data.gameVersions[] | select(test("^[0-9]+\\.[0-9]+\\.[0-9]+$"))' /root/temp/response.json)
              echo "Game version and mod runner: $gameVersions $forgeGameVersion"

              deps=$(jq -r '[.data.dependencies[] | select(.relationType == 3)]' /root/temp/response.json )
              echo "Dependencies: $deps"
              
              echo "$deps" | jq -c '.[]' | while IFS= read -r dep; do
                echo "Downloading dep: $dep"
                modId=$(echo "$dep" | jq -r '.modId')
                relationType=$(echo "$dep" | jq -r '.relationType')
                api_url_mod_files="$BASE_URL/v1/mods/$modId/files"
                curl -vvv -L "$api_url_mod_files" -H "x-api-key: $API_KEY" -o /root/temp/response_dep.json
                getDepFiles=$(jq -r '.data[]  | select(.gameVersions[])' /root/temp/response_dep.json)

                echo "$getDepFiles" | while IFS= read -r versionInfo; do
                  echo "$versionInfo" | jq -c '.gameVersions' | while IFS= read -r versionString; do
                    echo "versionString: $versionString"
                  done 
                  echo "versionInfo: $versionInfo"
                done
                
                
                echo "getInfoAboutDep: $getInfoAboutDep"
              done

              # for dep in deps; do
              #   echo "Downloading dep: $dep"
              #   modId=$(jq -r '.modId' "$dep")
              #   api_url_mod_files="$BASE_URL/v1/mods/$modId/files"
              #   curl -vvv -L "$api_url_mod_files" -H "x-api-key: $API_KEY" -o /root/temp/response_dep.json
              #   getInfoAboutDep=$(jq -r '.data[]  | select(.gameVersions[])' /root/temp/response_dep.json)
              #   echo "getInfoAboutDep: $getInfoAboutDep"
              # done
            else
              echo "Has no deps in mod"
            fi
          else
            echo "No information on deps"
          fi
         EOF

    
