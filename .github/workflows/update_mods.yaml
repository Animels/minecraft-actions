name: Add mode from modpack or stand-alone

on:
  workflow_dispatch:
    inputs:
      modid_projectid:
        description: 'Adds mods from project pack'
        required: false
        default: '876781'
        type: string
      fileid: 
        description: 'Adds stand-alone file'
        required: false
        default: '5397482'
        type: string
env:
  BASE_URL: https://api.curseforge.com
  MAX_PAGE_SIZE: 50
  API_KEY: $2a$10$4UughKvVMNC9Yl0cUfhAsOiOkCWgy/k/6rn.z5bIztd62LpZ1eibe

jobs:
  download_and_install_mods:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_DO_DROPLET }}

      - name: Copy files from push to droplet and start from the new version
        run: |
         INPUT_MOD_ID=${{ github.event.inputs.modid_projectid }}
         INPUT_FILE_ID=${{ github.event.inputs.fileid }}

        echo "Base URL: $BASE_URL"
        echo "API_KEY: $API_KEY"
        echo "MAX_PAGE_SIZE: $MAX_PAGE_SIZE"

          ssh -o StrictHostKeyChecking=no root@206.189.84.101 <<'EOF'
            echo "Running commands on the Droplet"
            echo "Base URL: $BASE_URL"
            echo "API_KEY: $API_KEY"
            echo "MAX_PAGE_SIZE: $MAX_PAGE_SIZE"
            cd /root/tempMC
            
            api_url="$BASE_URL/v1/mods/$INPUT_MOD_ID/files/$INPUT_FILE_ID/download-url"
            echo "API URL: $api_url"
            
            # Fetch the download URL using curl and jq
            response=$(curl --location "$api_url" \
            --header "Range: bytes=0-7000000" \
            --header "x-api-key: $API_KEY")
            
            # Extract download URL
            downloadUrl=$(echo $response | jq -r '.data')
            
            # Debug: Output the extracted URL
            echo "Extracted URL: $downloadUrl"
            
            # Validate the URL format
            if [[ $downloadUrl =~ ^https?:// ]]; then
              echo "Valid URL: $downloadUrl"
              
              # Download the file using the obtained URL
              curl -O "$downloadUrl"
            else
              echo "Invalid URL extracted: $downloadUrl"
              exit 1
            fi
         EOF

    
